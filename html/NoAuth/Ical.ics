<%ARGS>
$UserId => undef
$hash => undef
</%ARGS>

<% $calendar->as_string %>

<%INIT>
my $CurrentUser = new RT::CurrentUser();
$CurrentUser->LoadById($UserId);

unless ($CurrentUser->Id) {
	$m->abort;
}

my $Tickets = RT::Tickets->new($CurrentUser);
$Tickets->LimitStatus( VALUE => 'open' );
$Tickets->LimitStatus ( VALUE => 'new');
$Tickets->LimitStatus ( VALUE => 'stalled');
# $Tickets->LimitOwner ( VALUE => $CurrentUser->Id);

$Tickets->LimitDue(OPERATOR => ">", VALUE => 0 );

my $calendar = Data::ICal->new();

my ($uid) = $RT::WebURL =~ m{htt.*?://([^:]+)};

while (my $Ticket = $Tickets->Next ) {

    my %vtodo = (
	summary    => $Ticket->Subject ? $Ticket->Subject : '',
	dtstart    => Date::ICal->new( epoch => $Ticket->CreatedObj->Unix )->ical,
	url        => "${RT::WebURL}/Ticket/Display.html?id=" . $Ticket->id,
	uid        => Date::ICal->new( epoch => time() )->ical() . "-" . $Ticket->Id . "@" . $uid,
	categories => $Ticket->QueueObj->Name,
    );

    $vtodo{due} = Date::ICal->new( epoch => $Ticket->DueObj->Unix )->ical,
        if $Ticket->DueObj;

    if ($Ticket->OwnerObj->Id != $RT::Nobody->Id and $Ticket->OwnerObj->EmailAddress) {
	$vtodo{organizer} = "MAILTO:" . $Ticket->OwnerObj->EmailAddress;
	$vtodo{attendee} = "MAILTO:" . $Ticket->OwnerObj->EmailAddress;
    } elsif ($Ticket->QueueObj->CommentAddress) {
	$vtodo{organizer} = "MAILTO:" . $Ticket->QueueObj->CommentAddress;
	$vtodo{attendee} = "MAILTO:" . $Ticket->QueueObj->CommentAddress;
    }

    $vtodo{priority} = $Ticket->Priority
	if $Ticket->Priority;

    my $vtodo = Data::ICal::Entry::Todo->new();
    $vtodo->add_properties(%vtodo);
    $calendar->add_entry($vtodo);
}

</%INIT>